import ChunkManager from './chunkManager'

export default class City {
  scene: Phaser.Scene
  fovWidth: number
  fovWidth: number
  chunks: ChunkManager

	constructor (scene: Phaser.Scene, fovWidth?: number, fovHeight?:  number) {
    this.scene = scene

    this.fovWidth = fovWidth === undefined
      ? scene.game.config.width
      : fovWidth

    this.fovHeight = fovHeight === undefined
      ? scene.game.config.height
      : fovHeight

    this.chunks = new ChunkManager(this.scene, this.fovWidth, this.fovHeight)
	}

  /**
   * 
   */
	getChunk (chunkX: number, chunkY: number) {
		// @TODO: this is where the fun is :D
    return [
      // layer 1
      [
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y1
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y2
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y3
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y4
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y5
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y6
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y7
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y8
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y9
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y10
      ],
      // layer 2
      [
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y1
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y2
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y3
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y4
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y5
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y6
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y7
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y8
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y9
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y10
      ],
      // layer 3
      [
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y1
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y2
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y3
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y4
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y5
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y6
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y7
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y8
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y9
        [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ], // y10
      ]
    ]
	}
}
